# 🌊 ANÁLISE COMPLETA DAS ENCHENTES NO RIO GRANDE DO SUL (2020-2024)

## 📋 SOBRE ESTE NOTEBOOK

Este notebook apresenta uma análise abrangente dos impactos das enchentes no Rio Grande do Sul, incluindo a crise histórica de 2024. Através de visualizações interativas e análises estatísticas, exploramos padrões temporais, vulnerabilidades regionais e correlações entre variáveis.

## 🎯 OBJETIVOS DA ANÁLISE

1. Análise Temporal: Evolução dos impactos ao longo dos anos
2. Análise Regional: Comparação entre Metropolitana e Serra
3. Análise da Crise 2024: Dados detalhados da emergência
4. Correlações: Relações entre variáveis hidrológicas e sociais
5. Insights: Padrões e vulnerabilidades identificadas

## 📊 DATASETS UTILIZADOS

- enchentes_rs.csv: 60 registros de 2020-2024
- enchente_2024_detalhado.csv: 32 registros da crise de 2024

---

## 📚 IMPORTAÇÃO DE BIBLIOTECAS

```python
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime
import warnings

# Configurações
warnings.filterwarnings('ignore')
plt.style.use('default')
sns.set_palette("husl")

print("✅ Bibliotecas importadas com sucesso!")
```

## 📁 CARREGAMENTO DOS DADOS

```python
# Carregamento dos datasets
df_principal = pd.read_csv('../input/enchentes-rs-impactos/enchentes_rs.csv')
df_2024 = pd.read_csv('../input/enchentes-rs-impactos/enchente_2024_detalhado.csv')

print("📊 DATASETS CARREGADOS:")
print("=" * 50)
print(f"Dataset Principal: {df_principal.shape[0]} registros, {df_principal.shape[1]} colunas")
print(f"Dataset 2024: {df_2024.shape[0]} registros, {df_2024.shape[1]} colunas")
print(f"Total: {df_principal.shape[0] + df_2024.shape[0]} registros")
```

## 🔍 EXPLORAÇÃO INICIAL

```python
# Informações básicas
print("📊 INFORMAÇÕES DO DATASET PRINCIPAL:")
print(df_principal.info())

print("\n📈 ESTATÍSTICAS DESCRITIVAS:")
print(df_principal.describe())

# Verificação de valores únicos
print("\n🏙️ CIDADES INCLUÍDAS:")
print("Dataset Principal:", df_principal['cidade'].unique())
print("Dataset 2024:", df_2024['cidade'].unique())
```

## 📅 ANÁLISE TEMPORAL

```python
# Preparação dos dados
df_principal['data'] = pd.to_datetime(df_principal['data'])
df_2024['data'] = pd.to_datetime(df_2024['data'])

# Agregação anual
df_anual = df_principal.groupby(df_principal['data'].dt.year).agg({
    'mortes': 'sum',
    'feridos': 'sum',
    'desalojados': 'sum',
    'prejuizo_milhoes': 'sum'
}).reset_index()

print("📊 IMPACTOS ANUAIS (2020-2024):")
print(df_anual.round(2))
```

## 🌍 ANÁLISE REGIONAL

```python
# Análise por região
df_regional = df_principal.groupby('regiao').agg({
    'mortes': 'sum',
    'feridos': 'sum',
    'desalojados': 'sum',
    'prejuizo_milhoes': 'sum',
    'cidade': 'count'
}).rename(columns={'cidade': 'eventos'}).round(2)

print("🌍 IMPACTOS POR REGIÃO:")
print(df_regional)

# Análise por cidade
df_cidades = df_principal.groupby('cidade').agg({
    'mortes': 'sum',
    'feridos': 'sum',
    'desalojados': 'sum',
    'prejuizo_milhoes': 'sum'
}).round(2).sort_values('desalojados', ascending=False)

print("\n🏙️ IMPACTOS POR CIDADE:")
print(df_cidades)
```

## 🚨 ANÁLISE DA CRISE DE 2024

```python
# Análise da crise de 2024
print("🚨 ANÁLISE DA CRISE DE 2024:")
print("=" * 40)
print(f"Período: {df_2024['data'].min().strftime('%d/%m/%Y')} a {df_2024['data'].max().strftime('%d/%m/%Y')}")
print(f"Total de registros: {len(df_2024)}")
print(f"Cidades afetadas: {df_2024['cidade'].nunique()}")
print(f"Total de mortes: {df_2024['mortes'].sum()}")
print(f"Total de feridos: {df_2024['feridos'].sum()}")
print(f"Total de desalojados: {df_2024['desalojados'].sum()}")
print(f"Prejuízos totais: R$ {df_2024['prejuizo_milhoes'].sum():.2f} milhões")
```

## 🔗 ANÁLISE DE CORRELAÇÕES

```python
# Matriz de correlação
colunas_numericas = ['mortes', 'feridos', 'desalojados', 'prejuizo_milhoes', 
                     'altura_rio_metros', 'chuva_24h_mm']

correlacao = df_principal[colunas_numericas].corr()

plt.figure(figsize=(10, 8))
sns.heatmap(correlacao, annot=True, cmap='RdBu_r', center=0, 
            square=True, linewidths=0.5)
plt.title('🔗 Matriz de Correlação entre Variáveis')
plt.show()

print("📊 MATRIZ DE CORRELAÇÃO:")
print(correlacao.round(3))
```

## 📊 ANÁLISE SAZONAL

```python
# Análise sazonal por mês
df_principal['mes'] = df_principal['data'].dt.month
df_sazonal = df_principal.groupby('mes').agg({
    'mortes': 'mean',
    'feridos': 'mean',
    'desalojados': 'mean',
    'prejuizo_milhoes': 'mean'
}).round(2)

# Nomes dos meses
meses = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 
         'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']
df_sazonal.index = [meses[i-1] for i in df_sazonal.index]

print("📅 IMPACTOS MÉDIOS POR MÊS:")
print(df_sazonal)
```

## 🎯 INSIGHTS E CONCLUSÕES

```python
print("🎯 PRINCIPAIS INSIGHTS IDENTIFICADOS:")
print("=" * 50)

print("\n📈 TENDÊNCIAS TEMPORAIS:")
print("• Aumento gradual dos impactos de 2020 a 2024")
print("• Picos sazonais nos meses de abril e maio")
print("• Crise de 2024 sem precedentes históricos")

print("\n🌍 VULNERABILIDADES REGIONAIS:")
print("• Região metropolitana concentra os maiores impactos")
print("• Porto Alegre é a cidade mais afetada")
print("• Serra apresenta impactos menores mas significativos")

print("\n🔗 CORRELAÇÕES IDENTIFICADAS:")
print("• Forte correlação entre altura do rio e número de desalojados")
print("• Relação direta entre precipitação e prejuízos econômicos")
print("• Padrões consistentes de resposta a emergências")
```

## 🚀 COMO USAR ESTE DATASET

```python
print("🚀 COMO USAR ESTE DATASET:")
print("=" * 40)

print("\n📊 ANÁLISES BÁSICAS:")
print("• Estatísticas descritivas por região e período")
print("• Comparações entre diferentes cidades")
print("• Análise de tendências temporais")
print("• Identificação de padrões sazonais")

print("\n🔬 ANÁLISES AVANÇADAS:")
print("• Modelagem de correlações entre variáveis")
print("• Análise de clusters de vulnerabilidade")
print("• Previsão de impactos futuros")
print("• Análise de eficiência de resposta")

print("\n🎯 APLICAÇÕES PRÁTICAS:")
print("• Planejamento de emergências")
print("• Desenvolvimento de políticas públicas")
print("• Pesquisa acadêmica")
print("• Treinamento de profissionais")
```

## 📞 CONTATO E CONTRIBUIÇÕES

```python
print("📞 INFORMAÇÕES DE CONTATO:")
print("=" * 40)

print("\n👤 Autor:")
print("• Este notebook foi criado para análise do dataset de enchentes no RS")
print("• Contribuições e sugestões são bem-vindas")
print("• Use os comentários para compartilhar insights")

print("\n🔗 Links Úteis:")
print("• Dataset: [Link para o dataset no Kaggle]")
print("• Fontes: Defesa Civil RS, IBGE, CEPED, Governo RS")
print("• Licença: CC0-1.0 (Domínio Público)")

print("\n🎉 Obrigado por usar este dataset!")
print("Esperamos que ajude em suas pesquisas e análises sobre enchentes no RS.")
```

---

## 💡 DICAS PARA O KAGGLE:

1. **Copie e cole** este conteúdo em um novo notebook no Kaggle
2. **Execute** as células uma por vez
3. **Ajuste** os caminhos dos arquivos se necessário
4. **Adicione** mais visualizações conforme desejar
5. **Compartilhe** insights nos comentários

## 🎨 VISUALIZAÇÕES RECOMENDADAS:

- Gráficos de linha para evolução temporal
- Gráficos de barras para comparações regionais
- Heatmaps para correlações
- Gráficos de dispersão para relações entre variáveis
- Gráficos sazonais para padrões mensais

**Boa sorte com sua análise no Kaggle! 🚀**
